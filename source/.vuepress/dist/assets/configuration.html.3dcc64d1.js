import{_ as n,o as a,c as s,e as t}from"./app.a952a5ca.js";const e={},o=t(`<h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h1><p>We can use the <code>Engine.Configure(...)</code> method to configuration the engine.</p><p>This operation is not necessary. If no explicit configuration is performed, the system will automatically initialize the engine with default options.</p><h2 id="configure-tag-symbols" tabindex="-1"><a class="header-anchor" href="#configure-tag-symbols" aria-hidden="true">#</a> Configure tag symbols</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>Engine<span class="token punctuation">.</span><span class="token function">Configure</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span>TagPrefix <span class="token operator">=</span> <span class="token string">&quot;\${&quot;</span><span class="token punctuation">;</span>
    c<span class="token punctuation">.</span>TagSuffix <span class="token operator">=</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">;</span>
    c<span class="token punctuation">.</span>TagFlag <span class="token operator">=</span> <span class="token char">&#39;$&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configure-resource-directory" tabindex="-1"><a class="header-anchor" href="#configure-resource-directory" aria-hidden="true">#</a> Configure Resource Directory</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>Engine<span class="token punctuation">.</span><span class="token function">Configure</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span>ResourceDirectories <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token string">@&quot;c:\\wwwroot\\theme&quot;</span><span class="token punctuation">,</span>
            <span class="token string">@&quot;c:\\wwwroot\\view&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configure-global-data" tabindex="-1"><a class="header-anchor" href="#configure-global-data" aria-hidden="true">#</a> Configure global data</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>Engine<span class="token punctuation">.</span><span class="token function">Configure</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    data<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jntemplate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="other" tabindex="-1"><a class="header-anchor" href="#other" aria-hidden="true">#</a> Other</h2><p>See api.</p>`,11),c=[o];function p(i,u){return a(),s("div",null,c)}const r=n(e,[["render",p],["__file","configuration.html.vue"]]);export{r as default};
